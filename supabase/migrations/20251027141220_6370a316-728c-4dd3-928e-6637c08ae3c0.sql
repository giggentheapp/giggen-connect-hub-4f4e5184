-- Fix handle_new_user function to use correct English enum values
CREATE OR REPLACE FUNCTION public.handle_new_user()
RETURNS trigger
LANGUAGE plpgsql
SECURITY DEFINER
SET search_path TO 'public'
AS $function$
DECLARE
  base_username TEXT;
  final_username TEXT;
  username_suffix INTEGER := 1;
BEGIN
  -- Check if username was provided in metadata (new signups)
  IF NEW.raw_user_meta_data->>'username' IS NOT NULL THEN
    final_username := LOWER(NEW.raw_user_meta_data->>'username');
  ELSE
    -- Autogenerate username for existing users or fallback
    base_username := LOWER(
      REGEXP_REPLACE(
        COALESCE(NEW.raw_user_meta_data->>'display_name', SPLIT_PART(NEW.email, '@', 1)),
        '[^a-zA-Z0-9]',
        '',
        'g'
      )
    );
    
    -- Ensure minimum length
    IF LENGTH(base_username) < 3 THEN
      base_username := 'user' || SUBSTR(NEW.id::text, 1, 8);
    END IF;
    
    -- Find available username by adding suffix if needed
    final_username := base_username;
    WHILE EXISTS (SELECT 1 FROM profiles WHERE username = final_username) LOOP
      final_username := base_username || '_' || username_suffix;
      username_suffix := username_suffix + 1;
    END LOOP;
  END IF;
  
  -- Insert profile with username (chosen or autogenerated)
  -- CRITICAL FIX: Use 'musician' (English) not 'musiker' (Norwegian) as default
  INSERT INTO public.profiles (user_id, display_name, role, username, username_changed)
  VALUES (
    NEW.id, 
    COALESCE(NEW.raw_user_meta_data->>'display_name', NEW.email),
    COALESCE((NEW.raw_user_meta_data->>'role')::user_role, 'musician'),
    final_username,
    CASE WHEN NEW.raw_user_meta_data->>'username' IS NOT NULL THEN FALSE ELSE FALSE END
  );
  
  RETURN NEW;
END;
$function$;